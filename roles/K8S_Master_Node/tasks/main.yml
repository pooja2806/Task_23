- name: Installing Docker
  package:
          name: docker
          state: present
      

- name: "Start Docker"
  service:
         name: docker
         state: started

- name: "Enable Docker"
  service:
         name: docker
         enabled: yes

- name: "Repository For Kubernetes"
  copy:
          dest: "/etc/yum.repos.d/kubernetes.repo"
          src: "/etc/yum.repos.d/kubernetes.repo"


- name: "Install Kubeadm"
  shell: "yum install kubeadm --disableexcludes=kubernetes -y"
  changed_when: false

- name: "Install iproute-tc"
  package:
          name: iproute-tc
          state: present

- name: "Enable Kubelet"
  shell: "systemctl enable kubelet --now"
  changed_when: false


- name: "Pull Images"
  shell: "kubeadm config images pull"

- name: "Copy daemon.json File"
  copy:
         dest: "/etc/docker/daemon.json"
         src: "/root/daemon.json"

- name: "Restart Docker"
  service:
          name: docker
          state: restarted
          enabled: yes

- name: "Updating file"
  copy:
          dest: /etc/sysctl.d/k8s.conf
          content: |

                   net.bridge.bridge-nf-call-ip6tables=1
                   net.bridge.bridge-nf-call-iptables=1

- name: "Restart sysctl"
  shell: "sysctl --system"

- name: "Start Kubeadm Services"
  shell: "kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  ignore_errors: yes

- name: "Create Directory"
  file:
        name: "$HOME/.kube"
        state: directory
  become: yes

- name: "Copy Config File"
  shell: "sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"
  ignore_errors:  yes

- shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: "Flannel Installation"
  shell: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

- name: "Create Token"
  shell: "kubeadm token create --print-join-command"
  register: output

- name: "Store Token"     
  local_action: copy content={{ output.stdout }} dest={{ token_file }}







